snippet im
import           ${1}
endsnippet

snippet imd
import           Data.${1}
endsnippet

snippet imq
import qualified ${1:Data.ByteString} as ${2:BS}
endsnippet

snippet cl
class ${1:Name} where
  ${2:name} :: ${3}
endsnippet

snippet ff
foreign import ccall ${1:unsafe} ${2:name} ${3:${2}} :: ${4:IO ()}
endsnippet

snippet pra
{-# LANGUAGE ${1} #-}
endsnippet

snippet opt
{-# OPTIONS_GHC ${1} #-}
endsnippet

snippet ddump
{-# OPTIONS_GHC
      -fforce-recomp
      -ddump-simpl
      -dsuppress-idinfo
      -dsuppress-coercions
      -dsuppress-type-applications
      -dsuppress-uniques
      -dsuppress-module-prefixes
#-}
endsnippet

snippet GHC
#if __GLASGOW_HASKELL__ ${1:<} ${2:906}
${3}
#endif
endsnippet

snippet debug
import qualified Debug.Trace as Debug
endsnippet

snippet trace
Debug.trace ${1} ${2:\$}
endsnippet
